name: Build Image using Dockerfile
on: 
  workflow_dispatch:

jobs:
  build-unsinged:
    name: Build unsigned image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: setup docker buildx
      uses: docker/setup-buildx-action@v3.8.0

    - name: login to ghcr
      uses: docker/login-action@v3.3.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: docker_meta
      uses: docker/metadata-action@v4.4.0
      with:
        images: ghcr.io/shivaswaroop40/containerimages/my-unsigned-image
        tags: type=sha,format=short

    - name: Build and Push container images
      uses: docker/build-push-action@v6.10.0
      id: build-and-push
      with:
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
        outputs: type=oci,dest=/tmp/output-unsigned.tar

  build-signed:
    name: Build signed image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.7.0

    - name: setup docker buildx
      uses: docker/setup-buildx-action@v3.8.0

    - name: login to ghcr
      uses: docker/login-action@v3.3.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: docker_meta
      uses: docker/metadata-action@v4.4.0
      with:
        images: ghcr.io/shivaswaroop40/containerimages/my-signed-image
        tags: type=sha,format=short

    - name: Build and Push container images
      uses: docker/build-push-action@v6.10.0
      id: build-and-push
      with:
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
        outputs: type=oci,dest=/tmp/output-signed.tar

    - name: Sign and verify image with a key
      run: |
        images="${TAGS}@${DIGEST}"
        cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${images}
        echo "------------------------"
        echo "Verifying the signature"
        cosign verify --key env://COSIGN_PUBLIC_KEY ${images}
      env:
        TAGS: ${{ steps.docker_meta.outputs.tags }}
        COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        COSIGN_PUBLIC_KEY: ${{ secrets.COSIGN_PUBLIC_KEY }}
        DIGEST: ${{ steps.build-and-push.outputs.digest }}


